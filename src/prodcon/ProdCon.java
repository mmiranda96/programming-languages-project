/*
 * The MIT License
 *
 * Copyright 2018 com.github.mmiranda96.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */
package prodcon;

import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 * ProdCon is the UI for running the pipeline.
 * 
 * @author mmiranda96
 * @author rosamariaramirez
 */
public class ProdCon extends javax.swing.JFrame {
    private Buffer buffer;
    private Producer[] producers;
    private Consumer[] consumers;
    private int producersCount, consumersCount;
    private int producerSleepTime, consumerSleepTime;
    private int bufferSize;
    private int minValue, maxValue;
    private int operationsDoneCount;
    /**
     * Creates new form ProdCon
     */
    public ProdCon() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jTabbedPaneSetRun = new javax.swing.JTabbedPane();
        jPanelConfigure = new javax.swing.JPanel();
        jLabelProducers = new javax.swing.JLabel();
        jLabelConsumers = new javax.swing.JLabel();
        jLabelBuffer = new javax.swing.JLabel();
        jLabeLValues = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jLabelProducersCount = new javax.swing.JLabel();
        jSpinnerProducersCount = new javax.swing.JSpinner();
        jLabelProducersSleep = new javax.swing.JLabel();
        jSpinnerProducerSleepTime = new javax.swing.JSpinner();
        jSpinnerConsumerSleepTime = new javax.swing.JSpinner();
        jLabelConsumersSleep = new javax.swing.JLabel();
        jSpinnerConsumersCount = new javax.swing.JSpinner();
        jLabelConsumersCount = new javax.swing.JLabel();
        jLabelBufferSize = new javax.swing.JLabel();
        jSpinnerBufferSize = new javax.swing.JSpinner();
        jLabelValuesMin = new javax.swing.JLabel();
        jSpinnerValuesMin = new javax.swing.JSpinner();
        jLabelValuesMax = new javax.swing.JLabel();
        jSpinnerValuesMax = new javax.swing.JSpinner();
        jPanelRun = new javax.swing.JPanel();
        jLabelProducersRun = new javax.swing.JLabel();
        jLabelConsumersRun = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableProducers = new javax.swing.JTable();
        jProgressBarBufferCapacity = new javax.swing.JProgressBar();
        jLabelBufferCapacity = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTableConsumers = new javax.swing.JTable();
        jLabelOperationsDone = new javax.swing.JLabel();
        jLabelOperationsDoneCount = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jButtonStart = new javax.swing.JButton();
        jButtonStop = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTabbedPaneSetRun.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N

        jPanelConfigure.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N

        jLabelProducers.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabelProducers.setText("Producers");

        jLabelConsumers.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabelConsumers.setText("Consumers");

        jLabelBuffer.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabelBuffer.setText("Buffer");

        jLabeLValues.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabeLValues.setText("Values");

        jSeparator1.setOrientation(javax.swing.SwingConstants.VERTICAL);

        jLabelProducersCount.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabelProducersCount.setText("Number:");

        jSpinnerProducersCount.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jSpinnerProducersCount.setModel(new javax.swing.SpinnerNumberModel(1, 1, 100, 1));
        jSpinnerProducersCount.setToolTipText("");

        jLabelProducersSleep.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabelProducersSleep.setText("Sleep time:");

        jSpinnerProducerSleepTime.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jSpinnerProducerSleepTime.setModel(new javax.swing.SpinnerNumberModel(0, 0, 10000, 100));

        jSpinnerConsumerSleepTime.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jSpinnerConsumerSleepTime.setModel(new javax.swing.SpinnerNumberModel(0, 0, 10000, 100));

        jLabelConsumersSleep.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabelConsumersSleep.setText("Sleep time:");

        jSpinnerConsumersCount.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jSpinnerConsumersCount.setModel(new javax.swing.SpinnerNumberModel(1, 1, 100, 1));
        jSpinnerConsumersCount.setToolTipText("");

        jLabelConsumersCount.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabelConsumersCount.setText("Number:");

        jLabelBufferSize.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabelBufferSize.setText("Size:");

        jSpinnerBufferSize.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jSpinnerBufferSize.setModel(new javax.swing.SpinnerNumberModel(1, 1, 100, 1));
        jSpinnerBufferSize.setToolTipText("");

        jLabelValuesMin.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabelValuesMin.setText("Minimum:");

        jSpinnerValuesMin.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jSpinnerValuesMin.setModel(new javax.swing.SpinnerNumberModel());
        jSpinnerValuesMin.setToolTipText("");

        jLabelValuesMax.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabelValuesMax.setText("Maximum:");

        jSpinnerValuesMax.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jSpinnerValuesMax.setModel(new javax.swing.SpinnerNumberModel());
        jSpinnerValuesMax.setToolTipText("");

        javax.swing.GroupLayout jPanelConfigureLayout = new javax.swing.GroupLayout(jPanelConfigure);
        jPanelConfigure.setLayout(jPanelConfigureLayout);
        jPanelConfigureLayout.setHorizontalGroup(
            jPanelConfigureLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelConfigureLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelConfigureLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabeLValues)
                    .addComponent(jLabelConsumers)
                    .addComponent(jLabelProducers)
                    .addComponent(jLabelBuffer))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 2, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanelConfigureLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelConfigureLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(jPanelConfigureLayout.createSequentialGroup()
                            .addComponent(jLabelBufferSize)
                            .addGap(35, 35, 35)
                            .addComponent(jSpinnerBufferSize, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanelConfigureLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelConfigureLayout.createSequentialGroup()
                                .addComponent(jLabelProducersCount)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jSpinnerProducersCount, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanelConfigureLayout.createSequentialGroup()
                                .addComponent(jLabelConsumersCount)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jSpinnerConsumersCount, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanelConfigureLayout.createSequentialGroup()
                        .addComponent(jLabelValuesMin)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSpinnerValuesMin, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 99, Short.MAX_VALUE)
                .addGroup(jPanelConfigureLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelConfigureLayout.createSequentialGroup()
                        .addComponent(jLabelProducersSleep)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jSpinnerProducerSleepTime, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanelConfigureLayout.createSequentialGroup()
                        .addComponent(jLabelConsumersSleep)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jSpinnerConsumerSleepTime, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanelConfigureLayout.createSequentialGroup()
                        .addComponent(jLabelValuesMax)
                        .addGap(18, 18, 18)
                        .addComponent(jSpinnerValuesMax, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(42, 42, 42))
        );
        jPanelConfigureLayout.setVerticalGroup(
            jPanelConfigureLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator1)
            .addGroup(jPanelConfigureLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelConfigureLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelConfigureLayout.createSequentialGroup()
                        .addComponent(jLabelProducers)
                        .addGap(18, 18, 18)
                        .addComponent(jLabelConsumers)
                        .addGap(18, 18, 18)
                        .addComponent(jLabelBuffer)
                        .addGap(20, 20, 20)
                        .addComponent(jLabeLValues))
                    .addGroup(jPanelConfigureLayout.createSequentialGroup()
                        .addGroup(jPanelConfigureLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabelProducersCount)
                            .addComponent(jSpinnerProducersCount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabelProducersSleep)
                            .addComponent(jSpinnerProducerSleepTime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanelConfigureLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabelConsumersCount)
                            .addComponent(jSpinnerConsumersCount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabelConsumersSleep)
                            .addComponent(jSpinnerConsumerSleepTime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanelConfigureLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabelBufferSize)
                            .addComponent(jSpinnerBufferSize, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanelConfigureLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelConfigureLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabelValuesMax)
                                .addComponent(jSpinnerValuesMax, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanelConfigureLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabelValuesMin)
                                .addComponent(jSpinnerValuesMin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPaneSetRun.addTab("Configure", jPanelConfigure);

        jLabelProducersRun.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabelProducersRun.setText("Producers");

        jLabelConsumersRun.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabelConsumersRun.setText("Consumers");

        jSeparator2.setOrientation(javax.swing.SwingConstants.VERTICAL);

        jTableProducers.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jTableProducers.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Producer ID", "Operation"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTableProducers);

        jProgressBarBufferCapacity.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jProgressBarBufferCapacity.setValue(50);

        jLabelBufferCapacity.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabelBufferCapacity.setText("Buffer capacity");

        jTableConsumers.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jTableConsumers.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Consumer ID", "Operation", "Result"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(jTableConsumers);

        jLabelOperationsDone.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabelOperationsDone.setText("Operations done:");

        jLabelOperationsDoneCount.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabelOperationsDoneCount.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabelOperationsDoneCount.setText("0");

        javax.swing.GroupLayout jPanelRunLayout = new javax.swing.GroupLayout(jPanelRun);
        jPanelRun.setLayout(jPanelRunLayout);
        jPanelRunLayout.setHorizontalGroup(
            jPanelRunLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelRunLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanelRunLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelRunLayout.createSequentialGroup()
                        .addGroup(jPanelRunLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelRunLayout.createSequentialGroup()
                                .addGap(43, 43, 43)
                                .addComponent(jLabelProducersRun))
                            .addGroup(jPanelRunLayout.createSequentialGroup()
                                .addComponent(jLabelBufferCapacity, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(55, 55, 55)
                                .addComponent(jProgressBarBufferCapacity, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelRunLayout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(50, 50, 50)))
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(46, 46, 46)
                .addGroup(jPanelRunLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelRunLayout.createSequentialGroup()
                        .addComponent(jLabelOperationsDone, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabelOperationsDoneCount, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanelRunLayout.createSequentialGroup()
                        .addGroup(jPanelRunLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanelRunLayout.createSequentialGroup()
                                .addGap(57, 57, 57)
                                .addComponent(jLabelConsumersRun)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(41, 41, 41))
        );
        jPanelRunLayout.setVerticalGroup(
            jPanelRunLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator2)
            .addGroup(jPanelRunLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelRunLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelProducersRun)
                    .addComponent(jLabelConsumersRun))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelRunLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelRunLayout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanelRunLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jProgressBarBufferCapacity, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanelRunLayout.createSequentialGroup()
                                .addComponent(jLabelBufferCapacity, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 3, Short.MAX_VALUE))))
                    .addGroup(jPanelRunLayout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanelRunLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabelOperationsDone, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabelOperationsDoneCount, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        jTabbedPaneSetRun.addTab("Run", jPanelRun);

        jButtonStart.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jButtonStart.setText("START");
        jButtonStart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonStartActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jButtonStart, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jButtonStart, javax.swing.GroupLayout.DEFAULT_SIZE, 63, Short.MAX_VALUE)
        );

        jButtonStop.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jButtonStop.setText("STOP");
        jButtonStop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonStopActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTabbedPaneSetRun)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonStop, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPaneSetRun, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButtonStop, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonStopActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonStopActionPerformed
        this.stopPipeline();
    }//GEN-LAST:event_jButtonStopActionPerformed

    private void jButtonStartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonStartActionPerformed
        this.startPipeline();
    }//GEN-LAST:event_jButtonStartActionPerformed
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ProdCon.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ProdCon.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ProdCon.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ProdCon.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ProdCon().setVisible(true);
            }
        });
    }

    /**
     * Writes an operation into the producer table.
     * 
     * @param id    ID of the produer
     * @param op    Operation produced
     */
    public synchronized void writeProducedOperation(int id, Operation op) {
        DefaultTableModel model = (DefaultTableModel)
                this.jTableProducers.getModel();
        model.addRow(new Object[]{id, op});
        model.fireTableDataChanged();
    }
    
    /**
     * Writes a consumed operation into the consumer table.
     * 
     * @param id        ID of the consumer
     * @param op        Operation consumed
     * @param result    Result of the operation
     */
    public synchronized void
        writeConsumedOperation(int id, Operation op, Float result) {
        DefaultTableModel model = (DefaultTableModel)
                this.jTableConsumers.getModel();
        model.addRow(new Object[]{id, op, result});
        this.jLabelOperationsDoneCount.setText(++this.operationsDoneCount + "");
        model.fireTableDataChanged();
    }
    
    /**
     * Sets the buffer progress bar.
     * 
     * @param n Capacity of the buffer
     */
    public synchronized void setBufferProgressBar(int n) {
        this.jProgressBarBufferCapacity.setValue(n);
    }

    private void stopPipeline() {
        if (this.producers != null) {
            for (int i = 0; i < this.producersCount; i++) {
                this.producers[i].terminate();
            }
        }
        if (this.consumers != null) {
            for (int i = 0; i < this.consumersCount; i++) {
                this.consumers[i].terminate();
            }
        }
    }
    
    
    private void startPipeline() {
        this.stopPipeline();
        
        // Reconfigure elements
        DefaultTableModel model = (DefaultTableModel)
                this.jTableProducers.getModel();
        model.setRowCount(0);
        model = (DefaultTableModel)
                this.jTableConsumers.getModel();
        model.setRowCount(0);
        this.operationsDoneCount = 0;
        this.jLabelOperationsDoneCount.setText("0");
        this.jProgressBarBufferCapacity.setValue(0);
        
        // Get values
        this.producersCount = (int)
                this.jSpinnerProducersCount.getValue();
        this.producerSleepTime = (int)
                this.jSpinnerProducerSleepTime.getValue();
        this.consumersCount = (int)
                this.jSpinnerConsumersCount.getValue();
        this.consumerSleepTime = (int)
                this.jSpinnerConsumerSleepTime.getValue();
        this.bufferSize = (int)
                this.jSpinnerBufferSize.getValue();
        this.minValue = (int)
                this.jSpinnerValuesMin.getValue();
        this.maxValue = (int)
                this.jSpinnerValuesMax.getValue();

        // Verify min is smaller or equal than max
        if (this.minValue > this.maxValue) {
            JOptionPane.showMessageDialog(
                    null,
                    "\"min\" cannot be larger than \"max\"!",
                    "Invalid input",
                    JOptionPane.ERROR_MESSAGE
            );
            return;
        }
        
        this.jProgressBarBufferCapacity.setMaximum(this.bufferSize);

        // Initialize pipeline
        this.buffer = new Buffer(this.bufferSize, this);
        
        this.producers = new Producer[this.producersCount];
        for (int i = 0; i < this.producersCount; i++) {
            this.producers[i] = new Producer(
                    i + 1,
                    this.minValue,
                    this.maxValue,
                    this.producerSleepTime,
                    this.buffer
            );
            this.producers[i].start();
        }
        
        this.consumers = new Consumer[this.consumersCount];
        for (int i = 0; i < this.consumersCount; i++) {
            this.consumers[i] = new Consumer(
                    i + 1,
                    this.consumerSleepTime,
                    this.buffer,
                    this
            );
            this.consumers[i].start();
        }
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonStart;
    private javax.swing.JButton jButtonStop;
    private javax.swing.JLabel jLabeLValues;
    private javax.swing.JLabel jLabelBuffer;
    private javax.swing.JLabel jLabelBufferCapacity;
    private javax.swing.JLabel jLabelBufferSize;
    private javax.swing.JLabel jLabelConsumers;
    private javax.swing.JLabel jLabelConsumersCount;
    private javax.swing.JLabel jLabelConsumersRun;
    private javax.swing.JLabel jLabelConsumersSleep;
    private javax.swing.JLabel jLabelOperationsDone;
    private javax.swing.JLabel jLabelOperationsDoneCount;
    private javax.swing.JLabel jLabelProducers;
    private javax.swing.JLabel jLabelProducersCount;
    private javax.swing.JLabel jLabelProducersRun;
    private javax.swing.JLabel jLabelProducersSleep;
    private javax.swing.JLabel jLabelValuesMax;
    private javax.swing.JLabel jLabelValuesMin;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanelConfigure;
    private javax.swing.JPanel jPanelRun;
    private javax.swing.JProgressBar jProgressBarBufferCapacity;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSpinner jSpinnerBufferSize;
    private javax.swing.JSpinner jSpinnerConsumerSleepTime;
    private javax.swing.JSpinner jSpinnerConsumersCount;
    private javax.swing.JSpinner jSpinnerProducerSleepTime;
    private javax.swing.JSpinner jSpinnerProducersCount;
    private javax.swing.JSpinner jSpinnerValuesMax;
    private javax.swing.JSpinner jSpinnerValuesMin;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTabbedPane jTabbedPaneSetRun;
    private javax.swing.JTable jTableConsumers;
    private javax.swing.JTable jTableProducers;
    // End of variables declaration//GEN-END:variables
}
